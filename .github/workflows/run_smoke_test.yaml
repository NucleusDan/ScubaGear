on: 
  workflow_dispatch:
  push:
    branches:
      - 'automated-smoke-test'

name: Smoke Test

jobs:
  Run-Smoke-Test:
    runs-on: windows-latest
    env:
      SCUBA_EXECUTION_CERT_PFX: ${{ secrets.SCUBA_EXECUTION_CERT_PFX }}
      SCUBA_EXECUTION_CERT_PW: ${{ secrets.SCUBA_EXECUTION_CERT_PW }}
    defaults:
          run:
            shell: powershell 
    permissions:
      contents: read 
    steps:
    - name: Checkout repo code
      uses: actions/checkout@v3
    - name: Execute ScubaGear and Check Outputs
      run: |
        . Testing/Functional/SmokeTest/SmokeTestInit.ps1
        ./AllowBasicAuthentication.ps1 -RunAsAdmin

        $CertPwd = ConvertTo-SecureString -String "$env:SCUBA_EXECUTION_CERT_PW" -Force -AsPlainText
        $Result = New-ServicePrincipalCertificate -EncodedCertificate $env:SCUBA_EXECUTION_CERT_PFX -CertificatePassword $CertPwd
        $Thumbprint = $Result[-1]
        $AppId = "b682d3a5-bc68-450e-80ba-018b97aa2b21" #TODO: Make Github Secret

        @TestScripts = @(
          @{Path = "Testing/Functional/SmokeTest/SmokeTest001.Tests.ps1"; 
            TestParameters = @{
              Thumbprint = $Thumbprint; 
              Organization = "cisaent.onmicrosoft.com"; 
              AppId = $AppId}
          }
          @(Path = "Testing/Functional/SmokeTest/SmokeTest002.Tests.ps1")
          @{Path = "Testing/Functional/SmokeTest/SmokeTest001.Tests.ps1"; 
            TestParameters = @{
              Thumbprint = $Thumbprint; 
              Organization = "y2zj1.onmicrosoft.com"; 
              AppId = $AppId}}
          @(Path = "Testing/Functional/SmokeTest/SmokeTest002.Tests.ps1")
        )

        ##### Install all the dependencies
        Install-SmokeTestExternalDependencies

        Invoke-Pester -Script $TestScripts -Output Detailed

        Write-Output "Completed Smoke Test"